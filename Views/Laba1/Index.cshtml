@model Laba1VM


<div class="card-body p-4">
    <form method="post" class="row text-body-secondary">
        <div class="container d-flex justify-content-center align-items-center">
            <h5>Lab1 Task</h5>
        </div>
        <div class="container row">
            <div class="container col-12">
                <label for="arrayInput" class="m-1">Enter Array in following way: </label>
                <input asp-for="ArrayString" class="form-control border-2" placeholder="element1 element2 element3 ... elementN">
                <span asp-validation-for="ArrayString" class="ms-2 text-danger"></span>
            </div>
        </div>
        <div class="container row mt-2">
            <div class="container col-4 p-3 m-0">
                <button type="submit" class="btn btn-dark text-warning">Submit</button>
            </div>
            <div class="container col-8 p-3 m-0 d-flex align-items-center">
                <div class="form-check form-switch m-0">
                    <input class="form-check-input" name="customTaskChecked" type="checkbox" id="flexSwitchCheckDefault">
                    <label class="form-check-label" for="flexSwitchCheckDefault">Calculate custom task</label>
                </div>
            </div>
        </div>
    </form>
    @if (Model.SortingAlgorithmStepsResult is not null)
    {
        <div class="container row mt-3">
            <table class="table table-hover col-12">
                <thead>
                        <tr class="table-active table-dark">
                        <td scope="col" class="text-warning">Iteration</td>
                        @for (int i = 0; i < Model.Array.Length; i++)
                        {
                            <td scope="col" class="text-warning">@string.Format($"[{i}]")</td>
                        }
                    </tr>
                </thead>
                <tbody>
                    <tr class="table-light">
                        <td>Before sorting</td>
                        @foreach (var item in Model.Array)
                        {
                            <td>@string.Format($"{item}")</td>
                        }
                    </tr>
                    @foreach (var item in Model.SortingAlgorithmStepsResult)
                    {
                        <tr class="table-light">
                            <td class="col-2">
                                @(Array.IndexOf(Model.SortingAlgorithmStepsResult.ToArray(), item) + 1)
                            </td>
                            @for (int i = 0; i < item.Array.Length; i++)
                            {
                                if (i <= item.LastIndexSorted)
                                {
                                    <td class="bg-success">@string.Format($"{item.Array[i]}")</td>
                                    continue;
                                }

                                if (i == item.Index1ToSwap || i == item.Index2ToSwap)
                                {
                                    <td class="bg-danger">@string.Format($"{item.Array[i]}")</td>
                                    continue;
                                }
                            
                                <td>@string.Format($"{item.Array[i]}")</td>
                            }
                        </tr>    
                    }
                    <tr class="table-light">
                        <td>Result</td>
                        @foreach (var item in Model.SortingAlgorithmStepsResult.Last().Array)
                        {
                            <td class="bg-success">@string.Format($"{item}")</td>
                        }
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="container row mt-3">
            Time elapsed : @Model.TimeToSortInMiliseconds mcs
        </div>
        <div class="container row mt-3">
            Number of compare oeprations : @Model.ComparesCount
        </div>
    }
    
</div>


@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}