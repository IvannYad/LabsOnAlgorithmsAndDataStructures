@model Lab2VM

<div class="container d-flex justify-content-center align-items-center mt-5 mb-3 text-body-secondary">
    <h5>Lab2 Task</h5>
</div>
<div class="card-body p-4">
    <form method="post" class="row text-body-secondary">
        <div class="container row">
            <div class="container col-12 row">
                <div class="container col-4">
                    <label for="matrixInput" class="m-1">Enter Matrix of doubles: </label>
                </div>
                <div class="container col-8">
                    <textarea asp-for="MatrixString" id="matrixInput" style="width: 100%; height: 150px" placeholder="arr1[0] arr1[1] ... arr1[n]
arr2[0] arr2[1] ... arr2[n]
.
.
.
arrN[0] arrN[1] ... arrN[n]"></textarea>
                    <span asp-validation-for="MatrixString" class="ms-2 text-danger"></span>
                </div>
            </div>
        </div>
        <div class="container row mt-2">
            <div class="container col-4 p-3 m-0">
                <button type="submit" class="btn btn-dark text-warning">Submit</button>
            </div>
        </div>
    </form>
    @* If sorting occurs *@
    @if (Model.SortingAlgorithmStepsResult is not null &&  Model.SortingAlgorithmStepsResult.Count > 0)
    {
        <div class="container row mt-3 m-0 p-0">
            <table class="table table-hover col-12">
                <thead>
                <tr class="table-active table-dark">
                    <th scope="col" class="text-warning col-1">Iteration</th>
                    <th scope="col" class="text-warning col-1">Step</th>
                    <th scope="col" class="text-warning col-5">Before</th>
                    <th scope="col" class="text-warning col-5">After</th>
                </tr>
                </thead>
                <tbody>
                    @foreach (var step in Model.SortingAlgorithmStepsResult)
                    {
                        <tr class="table-active">
                            <td>@step.Iteration</td>
                            <td>@step.Step</td>
                            <td>
                                @* Matrix before *@
                                <table class="table table-hover col-12">
                                    <thead style="width:100%;">
                                        <tr class="table-active table-dark" style="width: 95%;">
                                            <th scope="col" class="text-warning">Sums</th>
                                            <th colspan="@step.MatrixBefore[0].Length" class="text-warning text-center">Matrix</th>
                                        </tr>
                                    </thead>
                                    <tbody style="width:100%;">
                                        @for (int i = 0, swapIndex = 0; i < step.SumsBefore.Length; i++)
                                        {
                                            @* Check for swappable indexes. *@
                                            @if (swapIndex < step.SwappableIndexes.Length && i == step.SwappableIndexes[swapIndex])
                                            {
                                                <tr style="width: 100%; border: solid 2px orange">
                                                    @if (i == step.Index1ToSwap)
                                                    {
                                                        <td class="bg-success" style="border-right: solid 1px grey; width:30px;">@step.SumsBefore[i]</td>
                                                        @for (int j = 0; j < step.MatrixAfter[i].Length; j++)
                                                        {
                                                            <td class="bg-success text-center">@step.MatrixBefore[i][j]</td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td style="border-right: solid 1px grey; width:30px;">@step.SumsBefore[i]</td>
                                                        @for (int j = 0; j < step.MatrixAfter[i].Length; j++)
                                                        {
                                                            <td class="text-center">@step.MatrixBefore[i][j]</td>
                                                        }
                                                    }
                                                </tr>
                                                swapIndex++;
                                            }
                                            else
                                            {
                                                <tr style="width: 100%;">
                                                    <td style="border-right: solid 1px grey; width:30px;">@step.SumsBefore[i]</td>
                                                    @for (int j = 0; j < step.MatrixBefore[i].Length; j++)
                                                    {
                                                        <td class="text-center">@step.MatrixBefore[i][j]</td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </td>

                            <td>
                                @* Matrix after *@
                                <table class="table table-hover col-12">
                                    <thead style="width:100%;">
                                        <tr class="table-active table-dark" style="width: 95%;">
                                            <th scope="col" class="text-warning">Sums</th>
                                            <th colspan="@step.MatrixAfter[0].Length" class="text-warning text-center">Matrix</th>
                                        </tr>
                                    </thead>
                                    <tbody style="width:100%;">
                                        @for (int i = 0, swapIndex = 0; i < step.SumsAfter.Length; i++)
                                        {
                                            @* Check for swappable indexes. *@
                                            @if (swapIndex < step.SwappableIndexes.Length && i == step.SwappableIndexes[swapIndex])
                                            {
                                                <tr style="width: 100%; border: solid 2px orange">
                                                    @* Check for elements that was swapped *@
                                                    @if (i == step.Index1ToSwap || i == step.Index2ToSwap)
                                                    {
                                                        <td  class="bg-danger" style="border-right: solid 1px grey; width:30px;">@step.SumsAfter[i]</td>
                                                        @for (int j = 0; j < step.MatrixAfter[i].Length; j++)
                                                        {
                                                            <td class="bg-danger text-center">@step.MatrixAfter[i][j]</td>
                                                        }
                                                    }
                                                    else
                                                    {
                                                        <td style="border-right: solid 1px grey; width:30px;">@step.SumsAfter[i]</td>
                                                        @for (int j = 0; j < step.MatrixAfter[i].Length; j++)
                                                        {
                                                            <td class="text-center">@step.MatrixAfter[i][j]</td>
                                                        }
                                                    }

                                                </tr>
                                                swapIndex++;
                                            }
                                            else
                                            {
                                                <tr style="width: 100%;">
                                                    <td style="border-right: solid 1px grey; width:30px;">@step.SumsAfter[i]</td>
                                                    @for (int j = 0; j < step.MatrixAfter[i].Length; j++)
                                                    {
                                                        <td class="text-center">@step.MatrixAfter[i][j]</td>
                                                    }
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
        
    @* Result table *@
    @if (Model.SortingAlgorithmStepsResult is not null)
    {
        <div class="container row  m-0  mt-3 bg-body-secondary">
            <div class ="container col-3 d-flex justify-content-center">
                <h3 class="text-center m-auto text-success">Result</h3>
            </div>
        
            <div class="container col-9 p-3">
                <table class="table table-hover m-0">
                    <thead style="width:100%;">
                        <tr class="table-active table-dark" style="width: 95%;">
                            <th colspan="@Model.Matrix[0].Length" class="text-warning text-center" style="border: solid grey 1px">Matrix</th>
                        </tr>
                    </thead>
                    <tbody style="width:100%;">
                        @for (int i = 0, swapIndex = 0; i < Model.Matrix.Length; i++)
                        {
                            <tr class="table-active" style="width: 100%;">
                                @for (int j = 0; j < Model.Matrix[0].Length; j++)
                                {
                                    <td class="text-center" style="border: solid grey 1px">@Model.Matrix[i][j]</td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
    

    @* If sorting occurs *@
    @if (Model.SortingAlgorithmStepsResult is not null && Model.SortingAlgorithmStepsResult.Count > 0)
    {
        <div class="container row mt-3 text-body-secondary">
            Time elapsed : @Model.TimeToSortInTicks ticks
        </div>

        <div class="container row mt-3 text-body-secondary">
            Number of comparison operations : @Model.ComparesCount
        </div>

        <div class="container row mt-3 text-body-secondary">
            Number of swipes : @Model.SwipesCount
        </div>
    }
    
</div>


@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
}